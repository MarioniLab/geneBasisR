% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_gene_prediction_scores.R
\name{get_gene_prediction_scores}
\alias{get_gene_prediction_scores}
\title{get_gene_prediction_scores}
\usage{
get_gene_prediction_scores(
  sce,
  genes.selection,
  genes.all = rownames(sce),
  batch = NULL,
  n.neigh = 5,
  nPC.all = 50,
  nPC.selection = NULL,
  genes.predict = rownames(sce),
  method = "spearman",
  corr_all.thresh = 0.25,
  gene_stat_all = NULL,
  ...
)
}
\arguments{
\item{sce}{SingleCellExperiment object containing gene counts matrix (stored in 'logcounts' assay).}

\item{genes.selection}{Character vector containing names of selected genes.}

\item{genes.all}{Character vector containing names of all (potentially relevant/variable) genes.}

\item{batch}{Name of the field in colData(sce) to specify batch. Default batch=NULL if no batch is applied.}

\item{n.neigh}{Positive integer > 1, specifying number of neighbors to use for kNN-graph. Default n.neigh=5.}

\item{nPC.all}{Scalar (or NULL) specifying number of PCs to use for construction of True kNN-graph. Default nPC.all=50.}

\item{nPC.selection}{Scalar (or NULL) specifying number of PCs to use for construction of Selection kNN-graph. Default nPC.selection=NULL (no PCA).}

\item{genes.predict}{Character vector containing names of genes for which we want to calculate gene prediction score. Default = genes.all.}

\item{method}{Character specifying method for correlation. Availbale options are c("spearman", "pearson", "kendall"). Default method="spearman".}

\item{corr_all.thresh}{Scalar specifying suitable threshold for correlation to consider (on True graph).}

\item{gene_stat_all}{If not NULL (NULL is default), gene_stat_all is pre-calculated stat for True graph. This is useful if this variable will be used re-used multiple times. Use geneBasisR::get_gene_correlation_scores to calculate this.}

\item{...}{Additional arguments}
}
\value{
data.frame, each row corresponds to gene, contains field gene_score = gene prediction score.
}
\description{
Calculates gene prediction scores by comparing True and Selection k-NN graphs.
}
\examples{
require(SingleCellExperiment)
n_row = 1000
n_col = 100
sce = SingleCellExperiment(assays = list(logcounts = matrix(rnorm(n_row*n_col), ncol=n_col)))
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
genes.selection = sample(rownames(sce) , 20)
out = get_gene_prediction_scores(sce, genes.selection)

}
