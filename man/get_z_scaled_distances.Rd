% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_neighborhood_preservation_scores.R
\name{get_z_scaled_distances}
\alias{get_z_scaled_distances}
\title{get_z_scaled_distances}
\usage{
get_z_scaled_distances(
  sce,
  genes.all = rownames(sce),
  batch = NULL,
  n.neigh = 5,
  nPC.all = 50,
  ...
)
}
\arguments{
\item{sce}{SingleCellExperiment object containing gene counts matrix.}

\item{genes.all}{String specifying genes to be used for construction of True kNN-graph.}

\item{batch}{Name of the field in colData(sce) to specify batch. Default batch=NULL if no batch is applied.}

\item{n.neigh}{Scalar specifying number of neighbors to use for kNN-graph. Default n.neigh=5.}

\item{nPC.all}{Scalar specifying number of PCs to use for construction of True kNN-graph. Default nPC.all=50.}

\item{...}{Additional arguments.}
}
\value{
kNN-graph with assigned neighbors and corresponding z-scored distances.
}
\description{
For each cell: ranks all other cells based on the transcriptional similarity and returns ordered z-scaled distances (lower distance -- closer cell).
It is an intermediate step for get_neighborhood_preservation_scores. It can be handy to calculate this part separately to be recycled multiple times
to compare different seelctions.
}
\examples{
require(SingleCellExperiment)
n_row = 1000
n_col = 100
sce = SingleCellExperiment(assays = list(logcounts = matrix(rnorm(n_row*n_col), ncol=n_col)))
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
out = get_z_scaled_distances(sce)
}
