% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_DE_genes.R
\name{get_DE_genes}
\alias{get_DE_genes}
\title{get_DE_genes}
\usage{
get_DE_genes(
  sce,
  celltype.id = "celltype",
  test.type = "binom",
  pval.type = "some",
  FDR.thresh = 0.01,
  ...
)
}
\arguments{
\item{sce}{SingleCellExperiment object containing gene counts matrix (stored in 'logcounts' assay).}

\item{celltype.id}{Character specifying which field in colData(sce) shoyld be used as celltype. Default celltype.id="celltype".}

\item{test.type}{String specifying which testing will be performed. Available options are the same as for scran::findMarkers, parameter test.use. Default test.type="binom".}

\item{pval.type}{String specifying how p-values are combined. Available options are the same as for scran::findMarkers, parameter pval.type. Default pval.type="some".}

\item{FDR.thresh}{Positive scalar specifying threshold for FDR. Default FDR=0.01.}

\item{...}{Additional arguments}
}
\value{

}
\description{
Essentially a wrapper for scran::findMarkers. Returns an aggregated stat across all cell types in a form of data.frame:
each row corresponds to cell type and gene which is found to be DE in this cell type (using designated FDR as a threshold for significance), FDR and summary.logFC.
}
\examples{
require(SingleCellExperiment)
n_row = 1000
n_col = 100
sce = SingleCellExperiment(assays = list(logcounts = matrix(rnorm(n_row*n_col), ncol=n_col)))
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
sce$celltype = as.character(sample.int(5, n_col, replace = TRUE))
out = get_DE_genes(sce)

}
