% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_coexpression_stat.R
\name{get_coexpression_stat}
\alias{get_coexpression_stat}
\title{get_coexpression_stat}
\usage{
get_coexpression_stat(
  sce,
  genes,
  n = 10,
  corr.thresh = 0.5,
  method = "spearman",
  verbose = TRUE
)
}
\arguments{
\item{sce}{SingleCellExperiment object containing gene counts matrix (stored in 'logcounts' assay).}

\item{genes}{Charcter vector specifying genes to which co-expression stat should be returned.}

\item{n}{Scalar (or NULL) specifying number of top HVGs to be return. Default n=10. If NULL, returns all genes with correlation higher than threshold.}

\item{corr.thresh}{Scalar (float) specifying threshold for correlation to use. Default corr.thresh=0.5.}

\item{method}{Character specifying method for correlation. Availbale options are c("spearman", "pearson", "kendall"). Default method="spearman".}

\item{verbose}{Boolean identifying whether intermediate print outputs should be returned. Default verbose=TRUE.}
}
\value{
List, each element corresponds to a gene in genes. Each element is data.frame with co-expressed genes.
}
\description{
For each gene of interest, returns top co-expressed genes from the sce counts matrix (either filtered by number of co-expressed genes or correlation)
}
\examples{
require(SingleCellExperiment)
n_row = 500
n_col = 100
sce = SingleCellExperiment(assays = list(logcounts = matrix(rnorm(n_row*n_col), ncol=n_col)))
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
out = get_coexpression_stat(sce, c("1","2"))

}
